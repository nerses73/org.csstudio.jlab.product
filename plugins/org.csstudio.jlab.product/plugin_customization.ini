# CSS Preference Settings.
#
# This file provides a common place to define or override preference settings
# for all Eclipse and CSS plugins.
#
# The only difference between the plugin_customization files for the
# Diamond .5064 and .6064 products should be the location of the diirt
# configuration
#
#
# Fundamentally, the Eclipse preference mechanism works like this
# to allow customization at various levels:
# 1. Each plugin might contain default settings that are hardcoded
#    inside the Java sources of the plugin.
# 2. In addition, each plugin might have a file preferences.ini
#    in the root directory of the plugin directory or jar file.
#    When present, those values override the hardcoded settings.
#    Ideally, each plugin with preference settings has such a 
#    preferences.ini file to define the defaults because this
#    provides a convenient place to locate all the available
#    settings of a plugin in one file.
# 3. A plugin_customization.ini file like this one, located
#    in the root of the "Product" plugin directory or jar file
#    can override all of the above.
#    It is ideally used to provide site-specific defaults
#    (as this one does for using CSS at the SNS).
# 4. When starting CSS (or any Eclipse product), a customization file
#    with the same format can be provided via the -pluginCustomization
#    command line option to override settings.
#    NOTE: Eclipse silently ignores missing customization files.
#    THERE IS NO ERROR MESSAGE when the specified file does not exist! 
# 5. Finally, each end user can use the CSS/Preferences menu item to
#    interactively adjust most settings. Those changes are stored in the
#    workspace directory under 
#        {Workspace}/.metadata/.plugins/org.eclipse.core.runtime/.settings

# preferences for logging
org.csstudio.logging/jms_level=OFF
org.csstudio.logging/file_pattern=%t/cs-studio-%u.log

org.eclipse.ui/SHOW_PROGRESS_ON_STARTUP = true

# Refresh workspace automatically
org.eclipse.core.resources/refresh.enabled=true

# These options can be used to setup the update mechanism
org.eclipse.equinox.p2.ui.sdk.scheduler/enabled=false

# Internal (0) or external (1) web browser?  Doesn't work...
org.eclipse.ui.browser/browser-choice=1

# Channel Access
# Removal of these settings results in empty addr list
org.csstudio.platform.libs.epics/auto_addr_list=true
org.csstudio.platform.libs.epics/use_pure_java=true
org.csstudio.platform.libs.epics/max_array_bytes=1000000

# Data Browser
# Removal of these settings results in empty defaults
# URLs to suggest in the "Archives" view
org.csstudio.trends.databrowser2/urls=xnds://archiver.pri.diamond.ac.uk/archive/cgi/ArchiveDataServer.cgi*xnds://archiver2.pri.diamond.ac.uk/archive/cgi/ArchiveDataServer.cgi*fads://fa-archiver:8888*fads://fa-archiver:8889

# Default data sources for newly added channels
# Format:  <name>|<key>|<url>
# xnds: URLs use the key. Other URLs might ignore the key.
# Note: at Diamond 1000 is the key for the 'All' engine in both archivers.
org.csstudio.trends.databrowser2/archives=All-(Primary Archiver)|1000|xnds://archiver.pri.diamond.ac.uk/archive/cgi/ArchiveDataServer.cgi*All-(Standby Archiver)|1000|xnds://archiver2.pri.diamond.ac.uk/archive/cgi/ArchiveDataServer.cgi

# Use Autoscale axis on databrowser by default
org.csstudio.trends.databrowser2/use_auto_scale=true

## Authentication
org.csstudio.security/jaas_config_file=platform:/plugin/org.csstudio.dls.product.common/jaas.conf
org.csstudio.security/jaas_config_name=dummy

## Authorization
org.csstudio.security/authorization_provider=FileBased
org.csstudio.security/authorization_file_name=platform:/plugin/org.csstudio.dls.product.common/authorization.conf

# Default settings OPI Builder
# Final product can override in its plugin_preferences.ini
org.csstudio.opibuilder/color_file=platform:/plugin/org.csstudio.dls.product.common/color.def
org.csstudio.opibuilder/font_file=platform:/plugin/org.csstudio.dls.product.common/font.def
org.csstudio.opibuilder/schema_opi=platform:/plugin/org.csstudio.dls.product.common/default_widgets.opi
org.csstudio.opibuilder/top_opis=
org.csstudio.opibuilder/pv_connection_layer=pvmanager

# AutoComplete 
# Define ordered provider list by type and maximum number of expected results by provider
# providers.TYPE=provider_name[,max_results];provider_name[,max_results]...
# providers.ANOTHER_TYPE=provider_name[,max_results];provider_name[,max_results]...
# Example: 
#   providers.DEFAULT= History, 20 
#   providers.PV= History; SDD Database, 5; DB Files, 5
org.csstudio.autocomplete/providers.PV=History,10
org.csstudio.autocomplete/providers.LogentrySearch=Logbook,10;History,10

# Default macro definitions (pipe separated pairs: "<key1>","<value1">|"<key2>","<value2>"|...)
org.csstudio.opibuilder/macros="ISBL",""

# Diirt
org.csstudio.diirt.util.preferences/diirt.home=platform:/config/diirt_5064
#
# IDE sometimes adds stuff below this line...
#
